/*
 * HoofdPanel.java
 *
 * Created on __DATE__, __TIME__
 */

package be.camping.campingzwaenepoel.presentation.ui.panels.mainpanel;

import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JComponent;

import be.camping.campingzwaenepoel.common.constants.FotoConstant;
import be.camping.campingzwaenepoel.common.constants.PathConstant;
import be.camping.campingzwaenepoel.presentation.dialog.foto.ImportFotoBusyThread;
import be.camping.campingzwaenepoel.service.ConfiguratieService;
import be.camping.campingzwaenepoel.service.transfer.ConfiguratieDTO;
import org.springframework.beans.factory.annotation.Autowired;


/**
 *
 * @author  __USER__
 */
public class HoofdPanel extends javax.swing.JPanel {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Header header = null;
	private MainNavigationpanel mainNavigationpanel = null;
	
    public void init() {
        setLayout(new BorderLayout());
		this.add(getHeader(), BorderLayout.NORTH);
		this.add(getMainNavigationpanel(), BorderLayout.CENTER);
		getMainNavigationpanel().getKassaPanel().getJTxtNachten().requestFocusInWindow();
		getMainNavigationpanel().getKassaPanel().getJTxtNachten().selectAll();

    }

    @Autowired
	private ConfiguratieService configuratieService;
	
	public ConfiguratieService getConfiguratieService() {
		return configuratieService;
	}

	public void setConfiguratieService(ConfiguratieService configuratieService) {
		this.configuratieService = configuratieService;
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	public void initComponents() {

		this.setLayout(new BorderLayout());
		this.add(getHeader(), BorderLayout.NORTH);
		this.add(getMainNavigationpanel(), BorderLayout.CENTER);
		
		ConfiguratieDTO configuratieImportDone = getConfiguratieService().getConfiguratie(FotoConstant.getImportDone());
		
		if ((null != configuratieImportDone) 
				&& ("false".equals(configuratieImportDone.getWaarde()))) {
		
			ConfiguratieDTO importDirectoryConfiguratieDTO = getConfiguratieService().getConfiguratie(FotoConstant.getImportDirectory());
			ConfiguratieDTO fotoDirectoryConfiguratieDTO = getConfiguratieService().getConfiguratie(PathConstant.getFotoDirectoryPath());
			ConfiguratieDTO configuratie = getConfiguratieService().getConfiguratie(FotoConstant.getImportedFotos());
			
			if (null != configuratie && null != importDirectoryConfiguratieDTO && null != fotoDirectoryConfiguratieDTO) {
				List<JComponent> components = new ArrayList<JComponent>();
				components.add(getMainNavigationpanel().getFotoPanel().getFotoOptiesPanel().getjComponent());
				components.add(getMainNavigationpanel().getFotoPanel().getFotoOptiesPanel().getjBtnImportPhoto());
				FotoConstant.setImportBusy(true);
//				new ImportFotoBusyThread(components);
				getMainNavigationpanel().getFotoPanel().getFotoOptiesPanel().getjBtnImportPhoto().setEnabled(false);
				getMainNavigationpanel().getFotoPanel().getFotoService().importFoto(importDirectoryConfiguratieDTO.getWaarde(), fotoDirectoryConfiguratieDTO.getWaarde());
			}
		}
	}

	/**
	 * This method initializes headerInfo	
	 * 	
	 * @return be.camping.campingzwaenepoel.presentation.GUI.mainpanel.header	
	 */
	private Header getHeader() {
		return header;
	}
	
	public void setHeader(Header header) {
		this.header = header;
	}

	/**
	 * This method initializes mainNavigationpanel	
	 * 	
	 * @return be.camping.campingzwaenepoel.presentation.GUI.mainpanel.MainNavigationpanel	
	 */
	private MainNavigationpanel getMainNavigationpanel() {
		return mainNavigationpanel;
	}
	
	public void setMainNavigationpanel(MainNavigationpanel mainNavigationpanel) {
		this.mainNavigationpanel = mainNavigationpanel;
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	// End of variables declaration//GEN-END:variables

}